package com.anahuac.rest.api.DB

class Statements {
	public static final String DELETE_CATGESTIONESCOLAR="UPDATE CATGESTIONESCOLAR SET ISELIMINADO=true WHERE persistenceid=?";
	
	public static final String INSERT_CATLICENCIATURA="INSERT INTO CATLICENCIATURA (CLAVE,DESCRIPCION,FECHACREACION,ISELIMINADO,PERSISTENCEVERSION,USUARIOCREACION,PERSISTENCEID) VALUES (?,?,?,?,?,?,?);"
	
	public static final String GET_DETALLESOLICITUD="select IdBanner,ObservacionesRechazo,ObservacionesListaRoja,ObservacionesCambio,ordenpago  from detallesolicitud where caseid=(select concat(caseid,'') from SOLICITUDDEADMISION where correoelectronico=?  ORDER BY persistenceid desc limit 1)"
	
	public static final String GET_TASK_USERID_NAME="WITH filter (userid,taskname ) AS (VALUES (?,? ) ) SELECT DISTINCT pi.tenantid, pi.id, pi.name, pi.startedby, fi.name AS taskname FROM process_instance pi INNER JOIN public.flownode_instance fi ON pi.id = fi.rootcontainerid AND fi.name=(SELECT taskname FROM filter) AND (fi.assigneeid=0 OR fi.assigneeid=(SELECT userid FROM filter)) AND fi.statename = 'ready'LEFT JOIN public.actor actor ON actor.id=fi.actorid LEFT JOIN public.actormember amember ON amember.actorid=actor.id LEFT JOIN public.role rol ON rol.id=amember.roleid LEFT JOIN public.group_ grupo ON grupo.id=amember.groupid LEFT JOIN public.user_ usuario ON usuario.id=amember.userid INNER JOIN public.user_membership um ON (um.roleid=rol.id OR  grupo.id=um.groupid) AND (amember.groupid>0 OR  amember.roleid>0) AND um.userid= (SELECT userid FROM filter)"
	
	public static final String INSERT_CAT_NOTIFICACIONES_FIRMA="INSERT INTO CATNOTIFICACIONESFIRMA (PERSISTENCEID, CARGO, CORREO, GRUPO, NOMBRECOMPLETO, PERSISTENCEVERSION, SHOWCARGO, SHOWCORREO, SHOWGRUPO, SHOWTELEFONO, SHOWTITULO, TELEFONO, TITULO) VALUES ((SELECT count(persistenceid)+1 from CATNOTIFICACIONESFIRMA ), ?, ?, ?, ?, 0, ?, ?, ?, ?, ?, ?, ?) RETURNING persistenceid;";
	
	public static final String UPDATE_CAT_NOTIFICACIONES_FIRMA="UPDATE CATNOTIFICACIONESFIRMA SET  CARGO = ?, CORREO = ?, GRUPO = ?, NOMBRECOMPLETO = ?,  SHOWCARGO = ?, SHOWCORREO = ?, SHOWGRUPO = ?, SHOWTELEFONO = ?, SHOWTITULO = ?, TELEFONO = ?, TITULO = ? WHERE PERSISTENCEID = ?;"
	
	public static final String GET_CAT_NOTIFICACION_FIRMA="SELECT PERSISTENCEID, CARGO, CORREO, GRUPO, NOMBRECOMPLETO, PERSISTENCEVERSION, SHOWCARGO, SHOWCORREO, SHOWGRUPO, SHOWTELEFONO, SHOWTITULO, TELEFONO, TITULO FROM CATNOTIFICACIONESFIRMA [WHERE] [ORDERBY] [LIMITOFFSET];"
	
	public static final String GET_CAMPUS_ID_FROM_CLAVE="SELECT persistenceid as campus_id FROM CATCAMPUS where grupoBonita=? limit 1 "
	
	public static final String GET_IDBANNER_BY_IDBANNER="SELECT idbanner FROM DETALLESOLICITUD where idbanner=?;"
	
	public static final String GET_ASPIRANTES_EN_PROCESO="SELECT sda.apellidopaterno, sda.apellidomaterno, sda.primernombre, sda.segundonombre, sda.correoelectronico, sda.curp, campus.descripcion         AS campus, gestionescolar.DESCRIPCION AS licenciatura, periodo.DESCRIPCION        AS ingreso, estado.DESCRIPCION         AS estado, prepa.DESCRIPCION          AS preparatoria, sda.PROMEDIOGENERAL, sda.ESTATUSSOLICITUD, da.TIPOALUMNO, sda.caseid, sda.telefonocelular, da.observacionesListaRoja, da.observacionesRechazo, da.idbanner, campus.grupoBonita FROM SOLICITUDDEADMISION sda LEFT JOIN catcampus campus ON campus.persistenceid=sda.CATCAMPUS_PID [CAMPUS] LEFT JOIN CATGESTIONESCOLAR gestionescolar ON gestionescolar.persistenceid=sda.CATGESTIONESCOLAR_PID [PROGRAMA] LEFT JOIN CATPERIODO periodo ON periodo.PERSISTENCEID =sda.CATPERIODO_PID [INGRESO] LEFT JOIN CATESTADOs estado ON estado.persistenceid =sda.CATESTADO_PID [ESTADO] LEFT JOIN catbachilleratos prepa ON prepa.PERSISTENCEID =sda.CATBACHILLERATOS_PID [BACHILLERATO] LEFT JOIN detallesolicitud da ON sda.caseid::INTEGER=da.caseid::INTEGER [TIPOALUMNO] [WHERE] [ORDERBY] [LIMITOFFSET]";
	
	public static final String GET_SOLICITUDES_EN_PROCESO="SELECT sda.apellidopaterno, sda.apellidomaterno, sda.primernombre, sda.segundonombre, sda.correoelectronico, sda.curp, campus.descripcion         AS campus, gestionescolar.DESCRIPCION AS licenciatura, periodo.DESCRIPCION        AS ingreso, estado.DESCRIPCION         AS estado, prepa.DESCRIPCION          AS preparatoria, sda.PROMEDIOGENERAL, sda.ESTATUSSOLICITUD, da.TIPOALUMNO, sda.caseid, sda.telefonocelular, da.observacionesListaRoja, da.observacionesRechazo, da.idbanner, campus.grupoBonita FROM SOLICITUDDEADMISION sda LEFT JOIN catcampus campus ON campus.persistenceid=sda.CATCAMPUS_PID [CAMPUS] LEFT JOIN CATGESTIONESCOLAR gestionescolar ON gestionescolar.persistenceid=sda.CATGESTIONESCOLAR_PID [PROGRAMA] LEFT JOIN CATPERIODO periodo ON periodo.PERSISTENCEID =sda.CATPERIODO_PID [INGRESO] LEFT JOIN CATESTADOs estado ON estado.persistenceid =sda.CATESTADO_PID [ESTADO] LEFT JOIN catbachilleratos prepa ON prepa.PERSISTENCEID =sda.CATBACHILLERATOS_PID [BACHILLERATO] LEFT JOIN detallesolicitud da ON sda.caseid::INTEGER=da.caseid::INTEGER [TIPOALUMNO] [WHERE] [ORDERBY] [LIMITOFFSET]";
	
	/*************DANIEL CERVANTES***********************/
	//public static final String GET_CATCAMPUS="SELECT * FROM CATCAMPUS [WHERE] [ORDERBY] [LIMITOFFSET]"
	public static final String GET_CATCAMPUS="SELECT  c.*, p.descripcion as pais ,e.descripcion as estado FROM CATCAMPUS c left join CATPAIS p ON c.PAIS_PID  = p.PERSISTENCEID  left join CATESTADOS e ON  e.PERSISTENCEID  = c.ESTADO_PID  [WHERE] [ORDERBY] [LIMITOFFSET]"
	//public static final String GET_CATCAMPUS="SELECT * FROM CATCAMPUS c left join CATPAIS p ON c.PAIS_PID  = p.PERSISTENCEID  left join CATESTADOS e ON  e.PERSISTENCEID  = c.ESTADO_PID  [WHERE] [ORDERBY] [LIMITOFFSET]"
	public static final String GET_CATPAIS="SELECT * FROM CATPAIS [WHERE] [ORDERBY] [LIMITOFFSET]"
	public static final String GET_CATESTADOS="SELECT * FROM CATESTADOS [WHERE] [ORDERBY] [LIMITOFFSET]"
	public static final String GET_CATBACHILLERATO="SELECT * FROM CATBACHILLERATOS  [WHERE] [ORDERBY] [LIMITOFFSET]"
	public static final String GET_CATCIUDAD="SELECT c.*, b.descripcion as campus FROM CATCIUDAD c left join CATCAMPUS b on b.PERSISTENCEID = c.CAMPUS_PID  [WHERE] [ORDERBY] [LIMITOFFSET]"
	public static final String GET_CATFILTRADOCATALOGOSAUTODESCRIPCION = "SELECT * FROM [CATALOGOAD] [WHERE] [ORDERBY] [LIMITOFFSET]"
	/*************DANIEL CERVANTES FIN*******************/
	/*************JUAN ESQUER***********************/
	public static final String GET_CATTITULO="SELECT * FROM CATTITULO  [WHERE] [ORDERBY] [LIMITOFFSET]"
	public static final String GET_CATESTADOCIVIL ="SELECT * FROM CATESTADOCIVIL  [WHERE] [ORDERBY] [LIMITOFFSET]"
	public static final String GET_CATTIPOPRUEBA = "SELECT * FROM CATTIPOPRUEBA [WHERE] [ORDERBY] [LIMITOFFSET]"
	public static final String GET_CATPSICOLOGO = "SELECT * FROM CATPSICOLOGO  [WHERE] [ORDERBY] [LIMITOFFSET]"
	public static final String GET_USER_BONITA = "SELECT u.id, u.firstname, u.lastname, g.name as grupo, r.name as rol FROM user_ u INNER JOIN user_membership um ON um.userid=u.id INNER JOIN role r ON r.id=um.roleid [ROLE] INNER JOIN group_ g ON g.id=um.groupid [GROUP] [WHERE] [ORDERBY] [LIMITOFFSET]"
	public static final String GET_CATGESTIONESCOLAR = "SELECT * FROM CATGESTIONESCOLAR  [WHERE] [ORDERBY] [LIMITOFFSET]";
	public static final String INSERT_SESION="INSERT INTO SESIONES ( NOMBRE, DESCRIPCION, FECHA_INICIO, ISMEDICINA, PREPARATORIA_PID, ESTADO_PID, PAIS_PID, BORRADOR, CAMPUS_PID, TIPO,CIUDAD_PID) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?,?,?,?);";
	public static final String UPDATE_SESION="UPDATE SESIONES set NOMBRE=?, DESCRIPCION=?, FECHA_INICIO=?, ISMEDICINA=?, PREPARATORIA_PID=?, ESTADO_PID=?, PAIS_PID=?, BORRADOR=?, CAMPUS_PID=?, TIPO=?, CIUDAD_PID=? WHERE persistenceId=?"
	public static final String INSERT_PRUEBA="INSERT INTO PRUEBAS ( NOMBRE, APLICACION, ENTRADA, SALIDA, REGISTRADOS, ULTIMO_DIA_INSCRIPCION, CUPO, LUGAR, CAMPUS_PID, CALLE, NUMERO_INT, NUMERO_EXT, COLONIA, CODIGO_POSTAL, MUNICIPIO, PAIS_PID, ESTADO_PID, ISELIMINADO, SESION_PID, DURACION, DESCRIPCION, cattipoprueba_pid) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?);"
	public static final String UPDATE_PRUEBA="UPDATE PRUEBAS SET NOMBRE=?, APLICACION=?, ENTRADA=?, SALIDA=?, REGISTRADOS=?, ULTIMO_DIA_INSCRIPCION=?, CUPO=?, LUGAR=?, CAMPUS_PID=?, CALLE=?, NUMERO_INT=?, NUMERO_EXT=?, COLONIA=?, CODIGO_POSTAL=?, MUNICIPIO=?, PAIS_PID=?, ESTADO_PID=?, ISELIMINADO=?, SESION_PID=?, DURACION=?, DESCRIPCION=?, cattipoprueba_pid=? WHERE PERSISTENCEID=?"
	public static final String INSERT_RESPONSABLEDISPONIBLE="INSERT INTO RESPONSABLEDISPONIBLE ( HORARIO, DISPONIBLE, RESPONSABLEID, PRUEBA_PID, licenciaturas) VALUES (?, ?, ?, ?, ?);"
	public static final String UPDATE_RESPONSABLEDISPONIBLE="UPDATE RESPONSABLEDISPONIBLE SET HORARIO=?, DISPONIBLE=?, RESPONSABLEID=?, PRUEBA_PID=?, licenciaturas=?, iseliminado=? WHERE PERSISTENCEID=?";
	public static final String DELETE_IF_CAMBIO_DURACION="DELETE FROM RESPONSABLEDISPONIBLE WHERE PRUEBA_PID=?"
	public static final String GET_SESIONES_CALENDARIO="SELECT s.persistenceid as id, case when p.entrada is null then  concat(to_char( s.FECHA_INICIO, 'MM/DD/YYYY'),' 00:00' ) else concat(to_char( s.FECHA_INICIO, 'MM/DD/YYYY'),' ',p.entrada ) end as start_date, case when p.entrada is null then  concat(to_char( s.FECHA_INICIO, 'MM/DD/YYYY'),' 23:00' ) else concat(to_char( s.FECHA_INICIO, 'MM/DD/YYYY'),' ',p.salida) end as end_date, case when s.BORRADOR then concat(s.nombre, ' <i class=\"small material-icons\">do_not_disturb</i>' ) else concat(s.nombre, ' <i class=\"small material-icons\">language</i>' ) end as text, case when s.fecha_inicio<now() then '#969696'else '#ff5900' end as color FROM SESIONES s LEFT JOIN PRUEBAS p on p.SESION_PID =s.persistenceid and (SELECT fa.persistenceid FROM pruebas fa WHERE fa.sesion_pid= s.persistenceid LIMIT 1 )=p.persistenceid [WHERE]"
	public static final String GET_SESION_ID="SELECT s.* FROM SESIONES s WHERE persistenceId=?"
	public static final String GET_PRUEBAS_SESION_PID="SELECT p.*, r.horario, r.RESPONSABLEID , r.DISPONIBLE, c.descripcion as tipo, r.persistenceId as rid, r.ocupado, r.licenciaturas  FROM PRUEBAS p LEFT JOIN RESPONSABLEDISPONIBLE  r on r.PRUEBA_PID =p.PERSISTENCEID AND r.iseliminado=false LEFT JOIN cattipoprueba c on c.PERSISTENCEID =p.cattipoprueba_pid where p.SESION_PID =? AND p.iseliminado=false ORDER BY r.horario"
	public static final String GET_REGISTRADOS_CUPO="SELECT p.registrados, p.cupo from pruebas p where p.sesion_pid=? and cattipoprueba_pid!=1"
	public static final String UPDATE_REGISTRADOS="UPDATE PRUEBAS SET REGISTRADOS=(SELECT registrados+1 FROM pruebas WHERE sesion_pid=? LIMIT 1) where  sesion_pid=?"
	public static final String INSERT_SESION_ASPIRANTE="INSERT INTO sesion_aspirante (username,sesiones_pid,responsabledisponible_pid) VALUES (?,?,?)"
	public static final String UPDATE_OCUPADO_RESPONSABLE_DISPONIBLE="update RESPONSABLEDISPONIBLE set OCUPADO=true where persistenceid=?"
	public static final String GET_DATOS_SESION_USERNAME="select p.aplicacion, tipo.descripcion, p.lugar, case when tipo.persistenceid=1 then rd.horario  else concat(p.entrada,' - ',p.salida) end as horario from sesion_aspirante sa LEFT JOIN sesiones s on s.persistenceid= sa.sesiones_pid left join pruebas p on p.sesion_pid=sa.sesiones_pid left join cattipoprueba tipo on tipo.persistenceid=p.cattipoprueba_pid left join responsabledisponible rd on rd.persistenceid=sa.responsabledisponible_pid  where sa.username=?"
	/*************JUAN ESQUER FIN*******************/
	/***********************JESUS OSUNA********************************/
	public static final String GET_CATESCOLARIDAD = "SELECT * FROM CATESCOLARIDAD [WHERE] [ORDERBY] [LIMITOFFSET]"
	public static final String GET_CATSEXO = "SELECT * FROM CATSEXO [WHERE] [ORDERBY] [LIMITOFFSET]"
	public static final String GET_CATPARENTESCO = "SELECT * FROM CATPARENTESCO [WHERE] [ORDERBY] [LIMITOFFSET]"
	public static final String GET_CATDESCUENTOS = "SELECT c.*, b.descripcion as bachilleratos FROM CATDESCUENTOS c left join CATBACHILLERATOS b on b.PERSISTENCEID = c.CATBACHILLERATOS_PID [BACHILLERATO] LEFT JOIN CATCAMPUS a on a.grupobonita=c.campus [WHERE] [ORDERBY] [LIMITOFFSET]"
	public static final String GET_CATNACIONALIDAD = "SELECT * FROM CATNACIONALIDAD [WHERE] [ORDERBY] [LIMITOFFSET]"
	public static final String GET_CATGENERICO = "SELECT * FROM [CATALOGO] [WHERE] [ORDERBY] [LIMITOFFSET]"
	
	public static final String GET_TIPOPRUEBA = "SELECT c.persistenceid as tipoprueba_pid FROM PRUEBAS AS P LEFT JOIN cattipoprueba c on c.PERSISTENCEID =p.cattipoprueba_pid WHERE P.persistenceid = ?";
	public static final String GET_SESIONESASPIRANTE = "SELECT SA.*,RD.responsableid,RD.prueba_pid, S.fecha_inicio, P.nombre as nombre_prueba,P.Lugar as lugar_prueba, c.descripcion as tipo_prueba, case when C.persistenceid=1 then rd.horario  else concat(p.entrada,' - ',p.salida) end as horario, c.persistenceid as tipoprueba_pid, PL.asistencia FROM responsabledisponible as RD left join PRUEBAS  as P on P.persistenceid = RD.prueba_pid LEFT JOIN cattipoprueba c on c.PERSISTENCEID =p.cattipoprueba_pid LEFT JOIN SESIONES as S on S.persistenceid = P.sesion_pid LEFT JOIN sesion_aspirante as SA on SA.sesiones_pid = S.persistenceid LEFT JOIN PaseLista as PL on PL.USERNAME = SA.USERNAME  AND PL.prueba_pid = P.persistenceid WHERE SA.sesiones_pid = ? AND P.persistenceid = ? AND rd.responsableid = ?  AND CAST(S.fecha_inicio AS DATE) >= CAST([FECHA] AS DATE) [ENTREVISTA]  [WHERE] [ORDERBY] [LIMITOFFSET] "
	public static final String GET_SESIONESCALENDARIZADAS = "SELECT DISTINCT(P.persistenceid)  as pruebas_id,   P.nombre, S.fecha_inicio, S.tipo as residencia, S.persistenceid as sesiones_id, P.lugar, P.registrados as alumnos_generales, S.nombre as nombre_sesion, c.descripcion as tipo_prueba, P.cupo, P.entrada,P.salida FROM PRUEBAS as P  LEFT JOIN SESIONES as S on P.sesion_pid = S.persistenceid LEFT JOIN RESPONSABLEDISPONIBLE as RD on RD.prueba_pid = P.persistenceid LEFT JOIN cattipoprueba c on c.PERSISTENCEID =p.cattipoprueba_pid WHERE P.ISELIMINADO = FALSE AND RD.responsableid = ? AND CAST(S.fecha_inicio AS DATE) >= CAST([FECHA] AS DATE) [WHERE] [ORDERBY] [LIMITOFFSET]";
	public static final String GET_ASPIRANTESDELASESION = "SELECT sda.apellidopaterno, sda.apellidomaterno, sda.primernombre, sda.segundonombre, sda.telefonocelular, sda.correoelectronico, campus.descripcion AS campus, gestionescolar.DESCRIPCION AS licenciatura,  prepa.DESCRIPCION AS preparatoria, sda.PROMEDIOGENERAL, sda.ESTATUSSOLICITUD, da.TIPOALUMNO, sda.caseid, da.idbanner, campus.grupoBonita, le.descripcion as lugarexamen, sx.descripcion as sexo, CPO.descripcion as periodo FROM SOLICITUDDEADMISION sda LEFT JOIN catcampus campus ON campus.persistenceid=sda.CATCAMPUS_PID LEFT JOIN CATGESTIONESCOLAR gestionescolar ON gestionescolar.persistenceid=sda.CATGESTIONESCOLAR_PID LEFT JOIN CATPERIODO periodo ON periodo.PERSISTENCEID =sda.CATPERIODO_PID LEFT JOIN CATESTADOs estado ON estado.persistenceid =sda.CATESTADO_PID LEFT JOIN catbachilleratos prepa ON prepa.PERSISTENCEID =sda.CATBACHILLERATOS_PID LEFT JOIN detallesolicitud da ON sda.caseid::INTEGER=da.caseid::INTEGER LEFT JOIN catLugarExamen as le on le.persistenceid = sda.CATLUGAREXAMEN_PID LEFT JOIN catSexo as sx on sx.persistenceid = sda.CATSEXO_PID LEFT JOIN catPeriodo as CPO on CPO.persistenceid = sda.CATPERIODO_PID   WHERE sda.correoelectronico = ? [ORDERBY]";
	
	public static final String INSERT_PASEDELISTA = "INSERT INTO PaseLista (persistenceid,prueba_pid,username,asistencia,fecha,usuarioPaseLista) VALUES ( case when (SELECT max(persistenceId)+1 from PaseLista ) is null then 1 else (SELECT max(persistenceId)+1 from PaseLista) end,?,?,?,?,?) "
	public static final String UPDATE_PASEDELISTA = "update PaseLista set asistencia = ?, fecha = ?, usuarioPaseLista = ? where prueba_pid = ? and username = ?" 
	
	public static final String GET_SESIONESCALENDARIZADASPASADAS = "SELECT P.nombre, S.fecha_inicio, S.tipo as residencia, P.persistenceid as pruebas_id, S.persistenceid as sesiones_id, P.lugar, P.registrados as alumnos_generales, S.nombre as nombre_sesion, c.descripcion as tipo_prueba, P.cupo, P.entrada,P.salida FROM PRUEBAS as P LEFT JOIN SESIONES as S on P.sesion_pid = S.persistenceid LEFT JOIN cattipoprueba c on c.PERSISTENCEID =p.cattipoprueba_pid WHERE P.ISELIMINADO = FALSE AND CAST(S.fecha_inicio AS DATE) < CAST([FECHA] AS DATE) [WHERE] [ORDERBY] [LIMITOFFSET]";
	/***********************JESUS OSUNA FIN********************************/
	/*************JOSÉ GARCÍA***********************/
	public static final String GET_CATPROPEDEUTICO ="SELECT p.*, c.descripcion AS campus FROM CATPROPEDEUTICO p INNER JOIN CATCAMPUS c ON p.CAMPUS_PID = c.PERSISTENCEID  [WHERE] [ORDERBY] [LIMITOFFSET]";
	/*************JOSÉ GARCÍA FIN***********************/
	/***********************ERIC ROSAS*******************************/
	public static final String GET_CATPERIODO = "SELECT * FROM CATPERIODO [WHERE] [ORDERBY] [LIMITOFFSET]"
	/***********************ERIC ROSAS FIN********************************/
}
