package com.anahuac.rest.api.DB

class Statements {
	public static final String CONFIGURACIONESSSA="SELECT * FROM CATCONFIGURACION WHERE CLAVE = 'SASAzure'";
	
	public static final String INFO_REPORTE = "SELECT sda.resultadoPAA,sda.caseid,ds.idbanner,TO_CHAR(tp.fechaFinalizacion::DATE, 'dd-Mon-yyyy') AS fechaFinalizacion,sda.urlfoto,CONCAT(sda.apellidopaterno,' ',sda.apellidomaterno,CASE WHEN (sda.apellidomaterno != '' ) THEN ' ' END,sda.segundonombre,CASE WHEN ( sda.segundonombre != '' ) THEN ' ' END,sda.primernombre) AS nombre,  TO_CHAR(sda.fechanacimiento::DATE, 'dd-Mon-yyyy') AS fechanacimiento ,(CASE WHEN cb.descripcion = 'Otro' THEN sda.bachillerato ELSE cb.descripcion END) AS preparatoria, (CASE WHEN cb.descripcion = 'Otro' THEN sda.ciudadBachillerato ELSE cb.ciudad END) AS ciudad, cp.descripcion as pais, cge.nombre as carrera, IPAA.INVP,IPAA.PARA,IPAA.PAAN,IPAA.PAAV, sda.promediogeneral as promedio, cta.descripcion AS tipoAdmision, catP.clave as periodo,tp.quienIntegro, tp.quienRealizoEntrevista, date_part('year', age( sda.fechanacimiento::DATE)) as edad FROM SolicitudDeAdmision AS sda LEFT JOIN DetalleSolicitud AS ds ON sda.caseid = ds.caseid::INTEGER LEFT JOIN catbachilleratos AS cb ON cb.persistenceid = sda.catbachilleratos_pid LEFT JOIN catpais AS cp ON cp.persistenceid = sda.catpais_pid LEFT JOIN catGestionEscolar as CGE ON CGE.persistenceid = sda.catGestionEscolar_pid LEFT JOIN importacionPAA AS IPAA ON IPAA.idbanner = DS.idbanner and sda.caseid::varchar = IPAA.caseid LEFT JOIN catTipoAdmision AS cta ON cta.persistenceid = ds.cattipoadmision_pid LEFT JOIN catPeriodo AS catP ON catP.persistenceid = sda.catperiodo_pid LEFT JOIN testPsicometrico AS tp ON tp.caseid::INTEGER = sda.caseid WHERE sda.correoelectronico = ? AND countrechazo = ?"
	
	public static final String SELECT_SITUACION_SALUD = "SELECT auto.problemassaludatencioncontinua AS situacion_discapacidad, auto.tipoDiscapacidad AS tipo_discapacidad, auto.hasRecibidoAlgunaTerapia AS tipo_terapia, cd.descripcion AS cat_situacion_discapacidad_descripcion, cps.descripcion AS cat_persona_saludable_descripcion, ct.descripcion AS cat_terapia_descripcion, psa.descripcion as situacionTipo, auto.problemasSaludAtencionContinua FROM autodescripcionV2 AS auto INNER JOIN CatDiscapacidad AS cd ON auto.catvivesestadodiscapacidad_pid = cd.persistenceid INNER JOIN CatPersonaSaludable cps ON auto.catpersonasaludable_pid = cps.persistenceid INNER JOIN CatTerapia AS ct ON auto.catrecibidoterapia_pid = ct.persistenceid INNER JOIN CatProblemasSaludAtencion as psa ON psa.persistenceid = auto.catProblemasSaludAtencion_pid  WHERE auto.caseid = ?";
	
	public static final String SELECT_RECOMENDACIONES_CONCLUSIONES = "SELECT tp.resumenSalud AS salud, tp.conclusioneinvp AS conclusiones_recomendaciones, tp.interpretacioninvp AS interpretacion, cc.descripcion AS cursos_recomendados FROM testpsicometrico AS tp LEFT JOIN testpsicometri_custosrecomend AS tc ON tp.persistenceid = tc.testpsicometrico_pid LEFT JOIN catcursos AS cc ON tc.catcursos_pid = cc.persistenceid WHERE tp.caseid = ? and tp.countRechazo = ?"
	
	public static final String DATOS_BY_IDBANNER = " SELECT CASE WHEN sda.countrechazos is NULL THEN 0 ELSE sda.countrechazos END AS intentos ,sda.correoelectronico,DS.idbanner,SDA.urlFoto, SDA.urlConstancia, SDA.urlActaNacimiento  FROM DETALLESOLICITUD AS DS LEFT JOIN SOLICITUDDEADMISION AS SDA ON SDA.CASEID = DS.CASEID::INTEGER WHERE IDBANNER = ? limit 1"
	
	public static final String GET_DATOS_AVAL = "SELECT sdae.caseid AS caseidapoyo, sola.primernombre, sola.segundonombre, sola.apellidopaterno, sola.apellidomaterno, sdae.codigopostal AS cpsol, sdae.colonia AS coloniasol, sdae.calle AS callesol, sdae.numexterior AS numerosol, sdae.delegacionciudad AS ciudadsol, sola.telefono AS telefonosol, sola.telefonocelular AS celularsol, sola.correoelectronico AS correosol, sdae.pais AS paissol, sdae.estado AS estadosol, cges.nombre AS carrera, sola.urlFoto AS fotosol, deta.idbanner, cpfi.descripcion AS porcentajefinanciamientosolicitado, prea.porcentajeCredito AS porcentajefinanciamientopreautorizado, pers.nombres AS avalnombres, pers.apellidopaterno AS avalapellido_p, pers.apellidomaterno AS avalapellido_m, pers.curp AS avalcurp, pers.telefono AS avaltelefono, pers.email AS avalemail, pers.ingresomensual, CPRI.descripcion AS provenientede, pers.otroingreso, pers.ingresomensualtotal, pers.egresomensualtotal, pers.saldomensual, pers.pais AS avaldomiciliopais, pers.cp AS avaldomiciliocp, pers.estado AS avaldomicilioestado, pers.ciudad AS avaldomiciliociudad, pers.rfc, pers.colonia AS avaldomiciliocolonia, pers.calleynumero AS avaldomiciliocalleynumero, pers.empresatrabaja AS avaltrabajoempresa, pers.empresapuesto AS avaltrabajopuesto, pers.empresatelefono AS avaltrabajotelefono, pers.empresaextensiontelefono AS avaltrabajotelefonoext, pers.empresafechaingreso AS avaltrabajofechaingreso, pers.empresacorreoelectronico AS avaltrabajoemail, pers.empresapais AS avaltrabajopais, pers.empresacp AS avaltrabajocp, pers.empresaestado AS avaltrabajoestado, pers.empresaciudad AS avaltrabajociudad, pers.empresacolonia AS avaltrabajocolonia, pers.empresacalleynumero AS avaltrabajocalleynumero, inmu.pais AS inmueblepais, inmu.cp AS inmueblecp, inmu.estado AS inmuebleestado, inmu.ciudad AS inmuebleciudad, inmu.colonia AS inmueblecolonia, inmu.noexterior AS inmueblenointerior, inmu.calle AS inmueblecalle, inmu.noexterior AS inmueblenoexterior, nota.notario, nota.numeronotaria, nota.numeroescritura, nota.fecha AS fechanotario, nota.volumen AS volumennotario, nota.libro AS libronotario, nota.lugardeescrituracion AS lugardeescrituracionnotario, prop.folio AS foliopropiedad, prop.libro AS libropropiedad, prop.tomo AS tomopropiedad, prop.fecharegistro AS fechapropiedad, cper.descripcion AS periodo, FINA.*, sdae.*, sdae.colonia AS coloniasol, sdae.calle AS callesol, sdae.numexterior AS numerosol, sdae.pais AS paissol, sdae.estado AS estadosol, sdae.delegacionciudad AS ciudadsol, sdae.cattipoapoyo_id AS tipoapoyo FROM AvalInfoPersonal AS pers LEFT JOIN AvalInfoInmueble AS inmu ON inmu.caseid = pers.caseid LEFT JOIN AvalInfoNotarial AS nota ON nota.caseid = pers.caseid LEFT JOIN AvalInfoPropiedad AS prop ON prop.caseid = pers.caseid INNER JOIN SolicitudApoyoEducativo AS sdae ON sdae.caseid = pers.caseid INNER JOIN SolicitudDeAdmision AS sola ON sola.caseid::BIGINT = sdae.caseidadmisiones INNER JOIN DetalleSolicitud AS deta ON sola.caseid::BIGINT = deta.caseid::BIGINT LEFT JOIN CatPorcentajeFinanciamiento AS cpfi ON cpfi.persistenceid = sdae.CatPorcentajeFinanciamiento_id INNER JOIN PreAutorizacion AS prea ON prea.caseid = sdae.caseid LEFT JOIN CATPAIS AS pais ON pais.persistenceid = sola.catpais_pid LEFT JOIN CATESTADOS AS esta ON esta.persistenceid = sola.catestado_pid LEFT JOIN CATGESTIONESCOLAR AS cges ON cges.persistenceid = sola.catgestionescolar_pid LEFT JOIN CATPERIODO AS cper ON cper.persistenceid = SOLA.catperiodo_pid LEFT JOIN CatProvienenIngresos AS CPRI ON CPRI.persistenceid = pers.provenientede::bigint LEFT JOIN SolicitudFinanciamiento AS FINA ON FINA.caseidsdae = sdae.caseid WHERE sola.correoelectronico = ?;";
	
	public static final String GET_SOLICITUD_ADMISION_INFO = "SELECT SOLA.caseid AS caseid, SOLA.primernombre, SOLA.segundonombre, SOLA.apellidopaterno, SOLA.apellidomaterno, SOLA.correoelectronico, DETA.idbanner, CGE.nombre AS carrera, CPER.descripcion AS periodo, SOLA.fechanacimiento, CBAC.descripcion AS preparatoria, CBAC.pais AS paisprepa, CBAC.estado AS estadoprepa, CBAC.ciudad AS ciudadprepa, CSEX.descripcion AS sexo, SOLA.promediogeneral, SOLA.calle, SOLA.ciudad, CPAI.descripcion AS pais, CEST.descripcion AS estado, SOLA.telefono, SOLA.telefonocelular, SOLA.tienepaa, SOLA.resultadopaa, CECI.descripcion AS estadocivil, SOLA.urlfoto, SOLA.colonia, SOLA.codigopostal AS cp, CTAD.descripcion AS tipoingreso, CATR.descripcion AS trabajas, sdae.colonia AS coloniasol, sdae.calle AS callesol, sdae.numexterior AS numerosol, sdae.pais AS paissol, sdae.estado AS estadosol, sdae.delegacionciudad AS ciudadsol, sdae.codigopostal AS codigopostalsol, CTAL.descripcion AS tipoalumno FROM SOLICITUDDEADMISION AS SOLA INNER JOIN DETALLESOLICITUD AS DETA ON SOLA.CASEID = DETA.CASEID ::bigint INNER JOIN CATGESTIONESCOLAR AS CGE ON CGE.persistenceid = SOLA.catgestionescolar_pid INNER JOIN CATPERIODO AS CPER ON CPER.persistenceid = SOLA.catperiodo_pid INNER JOIN CATSEXO AS CSEX ON CSEX.persistenceid = SOLA.catsexo_pid LEFT JOIN CATBACHILLERATOS AS CBAC ON CBAC.persistenceid = SOLA.catbachilleratos_pid LEFT JOIN CATPAIS AS CPAI ON CPAI.PERSISTENCEID = SOLA.catpais_pid LEFT JOIN CATESTADOS AS CEST ON CEST.PERSISTENCEID = SOLA.catestado_pid LEFT JOIN CATESTADOCIVIL AS CECI ON CECI.PERSISTENCEID = SOLA.catestadocivil_pid LEFT JOIN CATTIPOADMISION AS CTAD ON CTAD.persistenceid = DETA.cattipoadmision_pid LEFT JOIN AUTODESCRIPCIONV2 AS AUTO ON AUTO.CASEID = SOLA.CASEID LEFT JOIN CATACTUALMENTETRABAJAS AS CATR ON CATR.persistenceid = AUTO.catactualnentetrabajas_pid LEFT JOIN SolicitudApoyoEducativo AS sdae ON sdae.caseidadmisiones = SOLA.caseid ::BIGINT LEFT JOIN CatTipoAlumno AS CTAL ON CTAL.persistenceid = DETA.cattipoalumno_pid WHERE SOLA.CORREOELECTRONICO = ?;"
	
	public static final String GET_PADRES_TUTOR_BY_CASEID = "SELECT PADR.*, CPAR.descripcion AS parentesco, CPTR.descripcion AS trabaja, CPVI.descripcion AS vive, CTIT.descripcion AS titulo FROM PADRESTUTOR AS PADR LEFT JOIN CATPARENTESCO AS CPAR ON PADR.catparentezco_pid = CPAR.persistenceid LEFT JOIN CATPADRETRABAJA AS CPTR ON CPTR.persistenceid = PADR.cattrabaja_pid LEFT JOIN CATVIVE AS CPVI ON CPVI.persistenceid = PADR.vive_pid  LEFT JOIN CATTITULO AS CTIT ON CTIT.persistenceid = PADR.cattitulo_pid WHERE PADR.CASEID = ?;";
	
	public static final String GET_SOLICITUD_APOYO_INFO = "SELECT SDAE.costoMensualColegiatura AS colegiatura, SDAE.telefonoCasaTutor, SDAE.telefonoOficinaTutor, SDAE.parentescoTutor, SDAE.motivoBeca, SDAE.cantMensualPagarUni, SDAE.correoElectronicoTutor, SDAE.ingresoMensualNetoTutor, SDAE.motivoBeca, SDAE.cantMensualPagarUni, SDAE.contruccionM2Casa, SDAE.terrenoM2Casa, SDAE.valorAproxCasa, SDAE.calle, SDAE.delegacionCiudad, SDAE.numExterior, SDAE.numInterior, SDAE.pais, SDAE.colonia, SDAE.estado, SDAE.codigoPostal, SDAE.ingresoPadre, SDAE.ingresoMadre, SDAE.ingresoHermano, SDAE.ingresoTio, SDAE.ingresoAbuelo, SDAE.ingresoAspirante, SDAE.ingresoOtro, SDAE.ingresoTotal, SDAE.egresoRenta, SDAE.egresoServicios, SDAE.egresoEducacion, SDAE.egresoGastosMedicos, SDAE.egresoAlimentacion, SDAE.egresoVestido, SDAE.egresoSeguro, SDAE.egresoDiversion, SDAE.egresoAhorro, SDAE.egresoCreditos, SDAE.egresoOtros, SDAE.egresoTotal, SDAE.estatusSolicitud, CCDV.descripcion AS casadondevives, CSEX.descripcion AS sexoTutor, CECP.descripcion AS mispadresestan, CPIN.descripcion AS provieneningresos, CTAP.descripcion AS tipoapoyo, CTM.clave AS tipoMoneda, AUTO.porcentajeCreditoAutorizacion, AUTO.porcentajeBecaAutorizacion, AUTO.promedioMinimoAutorizacion, AUTO.descuentoAnticipadoAutorizacion, AUTO.motivoRechazoAutorizacionText, AUTO.cambiosSolicitudAutorizacionText, AUTO.fechaautorizacion, AUTO.usuarioautoriza, SDAE.telefonooficinamadre, SDAE.telefonooficinapadre, SDAE.telefonocasamadre, SDAE.telefonocasapadre, CTMO.clave AS tipomoneda, CTMO.descripcion AS tipomonedacompleto, PBECA.descripcion AS porcentajeBeca FROM SolicitudApoyoEducativo AS SDAE LEFT JOIN CATCASADONDEVIVES AS CCDV ON CCDV.persistenceid = SDAE.catCasaDondeVives_id LEFT JOIN CATSEXO AS CSEX ON CSEX.persistenceid = SDAE.catSexTutor_id LEFT JOIN CatSDAEEstadoCivilPadres AS CECP ON CECP.persistenceid = SDAE.catEstadoCivilPadres_id LEFT JOIN CatProvienenIngresos AS CPIN ON CPIN.persistenceid = SDAE.catProvienenIngresos_id LEFT JOIN CatTipoApoyo AS CTAP ON CTAP.persistenceid = SDAE.catTipoApoyo_id LEFT JOIN CatTipoMoneda AS CTM ON CTM.persistenceid = SDAE.catTipoMoneda_id LEFT JOIN AutorizacionApoyo AS AUTO ON AUTO.caseid = SDAE.caseid LEFT JOIN CatTipoMoneda AS CTMO ON CTMO.persistenceid = SDAE.cattipomoneda_id LEFT JOIN CatPorcentajeBeca AS PBECA ON PBECA.persistenceid = SDAE.catPorcentajeBeca_id WHERE SDAE.CASEID = ?;";
	
	public static final String GET_BIENES_RAICES_BY_CASEID = "SELECT BIEN.persistenceid, BIEN.descripcion, BIEN.direccionbanco, BIEN.persistenceversion, BIEN.valor, CTIP.descripcion AS tipo FROM BienesRaicesSolicitante AS BIEN  LEFT JOIN CATTIPOINVERSIONESPOSEE AS CTIP ON CTIP.persistenceid = BIEN.cattipoinversionesposee_id  WHERE BIEN.CASEID = ?";
	
	public static final String GET_HERMANOS_BY_CASEID = "SELECT nombres, apellidos, colegiaturamensual, edad, empresa, ingresomensual, institucion, isestudia, istienebeca, istrabaja, porcentajebecaasignado FROM HERMANOSSOLICITANTE  WHERE CASEID = ?;";
	
	public static final String GET_AUTOS_BY_CASEID = "SELECT AUSO.marca, AUSO.modelo, AUSO.ano, CSDA.descripcion AS situacion, AUSO.costoaproximado FROM  AutosSolicitante AS AUSO LEFT JOIN CatSituacionAuto AS CSDA ON CSDA.persistenceid = AUSO.catsituacionauto_id WHERE CASEID = ?;";
	
	public static final String GET_IMAGENES_BY_CASEID = "SELECT ISOL.urlimagen, CISE.descripcion  FROM ImagenesSocioEcoSolicitante AS ISOL LEFT JOIN CatImagenesSocioEconomico AS CISE ON CISE.persistenceid = ISOL.imagensocioeconomico_id  WHERE ISOL.caseid = ? ORDER BY ISOL DESC LIMIT 4 OFFSET 0;";
	
	public static final String GET_PAA_BY_IDBANNER_SIN_PERSISTENCE = "SELECT idBanner,paan,la1,la2,la3,la4,pg1,pg2,pg3,pg4,pg5,pv1,pv4,paav,leo1,leo3,leo4,leo5,cit1,cit2,para,hi1,hi2,hi3,hi4,hi5,hi6,(paan::INTEGER+paav::INTEGER+para::INTEGER+ (CASE WHEN invp is null then 0  WHEN INVP = '' THEN 0 ELSE invp::INTEGER END) ) as total,fechaExamen,lexiumPaan,LexiumPaav,lexiumPara,lexiumTotal,fechaRegistro,tipoExamen,persistenceid,invp FROM IMPORTACIONPAA WHERE IDBANNER = ?"
	
	public static final String GET_REFERENCIAS_PERSONALES = "SELECT persistenceid, correopersonal, nombre, parentesco, telefono, espersonal FROM AvalReferenciasPersonales WHERE caseid = ? AND espersonal = ? ORDER BY persistenceid ASC";
	
	public static final String GET_REFERENCIAS_BANCARIAS = "SELECT banco, numerocuenta, saldopromedio, tipocuenta, esbancaria  FROM AvalReferencia WHERE caseid = ? AND esbancaria = ? ORDER BY persistenceid ASC";

	public static final String GET_DATOS_TUTOR_PDF = "SELECT subquery.nombre, subquery.apellidos, subquery.correoelectronico, subquery.titulo, subquery.telefono, subquery.parentesco, subquery.empresatrabaja, subquery.puesto FROM (SELECT DISTINCT ON (PADR.correoelectronico) PADR.nombre, PADR.apellidos, PADR.correoelectronico, CTIT.descripcion AS titulo, PADR.telefono, CPAR.descripcion AS parentesco, PADR.empresatrabaja, PADR.puesto FROM PadresTutor AS PADR LEFT JOIN CATTITULO AS CTIT ON CTIT.persistenceid = PADR.cattitulo_pid LEFT JOIN CATPARENTESCO AS CPAR ON CPAR.persistenceid = PADR.catparentezco_pid WHERE PADR.correoelectronico IN (SELECT correoelectronico FROM PadresTutor WHERE caseid = ? AND correoelectronico IS NOT NULL GROUP BY correoelectronico HAVING COUNT(*) > 1)) AS subquery;"
	
	public static final String GET_DATOS_TUTOR_PDF_IDS = "SELECT subquery.nombre, subquery.apellidos, subquery.correoelectronico, subquery.titulo, subquery.telefono, subquery.parentesco, subquery.empresatrabaja, subquery.puesto FROM (SELECT DISTINCT ON (PADR.correoelectronico) PADR.nombre, PADR.apellidos, PADR.correoelectronico, CTIT.descripcion AS titulo, PADR.telefono, CPAR.descripcion AS parentesco, PADR.empresatrabaja, PADR.puesto FROM PadresTutor AS PADR LEFT JOIN CATTITULO AS CTIT ON CTIT.persistenceid = PADR.cattitulo_pid LEFT JOIN CATPARENTESCO AS CPAR ON CPAR.persistenceid = PADR.catparentezco_pid WHERE PADR.correoelectronico IN (SELECT correoelectronico FROM PadresTutor WHERE caseid = ? AND persistenceid IN ([IDS]))) AS subquery;"
	
	public static final String GET_IDS_SOLICITUD = "SELECT CONCAT(data_id) AS concatenated_data_ids FROM (SELECT md.data_id FROM ref_biz_data_inst data  INNER JOIN multi_biz_data md on md.id=data.id WHERE proc_inst_id = ? AND data.name = ? LIMIT 1) AS subquery; ";
	
	public static final String GET_IDS_SOLICITUD_ARCH = "SELECT md.data_id FROM arch_ref_biz_data_inst data INNER JOIN arch_multi_biz_data md on md.id=data.id WHERE orig_proc_inst_id = ? AND data.name = ?  LIMIT 1";
	
	// Carta posgrados
	public static final String GET_ESTATUS_SOLICITUD = "SELECT estatus_solicitud FROM PSGRRegistro WHERE caseid = ? LIMIT 1;"
	public static final String GET_ESTATUS_SOLICITUD_BY_CASEID = "SELECT cspr.descripcion AS estatus_solicitud FROM PSGRRegistro AS rgst INNER JOIN PSGRCatEstatusProceso AS cspr ON rgst.estatus_solicitud = cspr.clave WHERE caseid = ?;"
	public static final String GET_CONFIGURACIONES_CARTA_POSGRADOS = "SELECT clave, valor FROM PSGRConfiguraciones WHERE clave IN ('carta_posgrado_firma', 'carta_posgrado_puesto', 'carta_posgrado_lugar', 'carta_posgrado_contenido', 'carta_posgrado_contacto', 'carta_posgrado_contacto_dir', 'carta_posgrado_campus', 'carta_posgrado_campus_telefono_contacto', 'carta_posgrado_campus_correo_contacto', 'carta_posgrado_campus_pagina', 'carta_posgrado_lista_documentos') AND id_campus = (SELECT campus_pid FROM PSGRRegistro WHERE caseid = ? LIMIT 1)";
	public static final String GET_VARIABLES_CARTA_POSGRADOS = "SELECT regi.id_banner_validacion, regi.nombre, regi.apellido_paterno, regi.apellido_materno, regi.fecha_dictamen, camp.descripcion AS campus, psgr.descripcion AS posgrado, gesc.descripcion AS programa_interes, peri.descripcion AS periodo_ingreso FROM PSGRRegistro AS regi INNER JOIN PSGRSolAdmiPrograma AS prgm ON regi.caseid = prgm.caseid LEFT JOIN PSGRCatCampus AS camp ON prgm.campus_pid = camp.persistenceid LEFT JOIN PSGRCatPosgrado AS psgr ON prgm.posgrado_pid = psgr.persistenceid LEFT JOIN PSGRCatGestionEscolar AS gesc ON prgm.programa_interes_pid = gesc.persistenceid LEFT JOIN PSGRCatPeriodo AS peri ON prgm.periodo_ingreso_pid = peri.persistenceid WHERE regi.caseid = ? LIMIT 1;"
	
	public static final String GET_DATOS_PROGRAMA_BY_CASEID = "SELECT pgrm.estudiara_programa_otra_un_pid, cmps.descripcion AS campus, psgr.descripcion AS posgrado, gstn.descripcion AS carrera, prdo.descripcion AS periodo, LOWER(sino.descripcion) ILIKE 'no' AS estudiara_programa_otra_un FROM PSGRSolAdmiPrograma AS pgrm INNER JOIN PSGRCatCampus AS cmps ON cmps.persistenceid = pgrm.campus_pid INNER JOIN PSGRCatPosgrado AS psgr ON psgr.persistenceid = pgrm.posgrado_pid INNER JOIN PSGRCatGestionEscolar AS gstn ON gstn.persistenceid = pgrm.programa_interes_pid INNER JOIN PSGRCatPeriodo AS prdo ON prdo.persistenceid = pgrm.periodo_ingreso_pid INNER JOIN PSGRCatSiNo AS sino ON sino.persistenceid = pgrm.estudiara_programa_otra_un_pid  WHERE caseid = ?";
	public static final String GET_MEDIOS_ENTERASTE_BY_CASEID = "SELECT mdsn.especifique, mdsn.seleccionado, cmds.descripcion AS medio_enteraste   FROM PSGRMedioInformacionSolicitud mdsn INNER JOIN  PSGRCatMedioEnteraste AS cmds ON cmds.persistenceid = mdsn.cat_medio_enteraste_pid WHERE caseid = ?;";
	public static final String GET_DATOS_PERSONALES_BY_CASEID = " SELECT prsn.persistenceid, prsn.apellido_materno, prsn.apellido_paterno, prsn.curp, TO_CHAR(TO_DATE(prsn.fecha_nacimiento, 'YYYY-MM-DD'), 'DD/MM/YYYY') AS fecha_nacimiento, prsn.lugar_nacimiento_estado, prsn.lugar_nacimiento_pais, prsn.nombre, prsn.pasaporte, prsn.urlfoto, prsn.alumno_anahuac, prsn.id_banner, prsn.lugar_nacimiento_ciudad, ccmp.descripcion AS campus_alumno, csex.descripcion AS sexo, cncn.descripcion AS nacionalidad, cest.descripcion AS estado_civil, rlgn.descripcion AS religion FROM PSGRSolAdmiDatosPersonales AS prsn LEFT JOIN PSGRCatCampus AS ccmp ON prsn.campus_alumno_pid = ccmp.persistenceid LEFT JOIN PSGRCatSexo AS csex ON prsn.sexo_pid = csex.persistenceid LEFT JOIN PSGRCatNacionalidad AS cncn ON prsn.nacionalidad_pid = cncn.persistenceid LEFT JOIN PSGRCatEstadoCivil AS cest ON prsn.estado_civil_pid = cest.persistenceid LEFT JOIN PSGRCatReligion AS rlgn ON prsn.religion_pid = rlgn.persistenceid WHERE caseid = ?;";
	public static final String GET_DATOS_CONTACTO_BY_CASEID = "SELECT cont.calle, cont.correo_contacto, cont.numero_ext, cont.numero_int, cont.telefono_casa, cont.telefono_celular, cont.ciudad, cont.colonia, cont.cp, cont.estado, cont.municipio, cpis.descripcion AS pais, cont.cnem_apellido_materno, cont.cnem_apellido_paterno, cont.cnem_correo_electronico, cont.cnem_nombre, cont.cnem_telefono_celular, cpar.descripcion AS parentesco  FROM PSGRSolAdmiDatosContacto AS cont INNER JOIN PSGRCatPais AS cpis ON cpis.persistenceid  = cont.pais_pid INNER JOIN PSGRCatParentesco AS cpar ON cpar.persistenceid = cont.cnem_parentesco_pid WHERE caseid = ?;";
	public static final String GET_MEDIOS_ENTERASTE_CASEID = "SELECT mdio.especifique, mdio.seleccionado,  cmed.descripcion AS medio_enteraste FROM PSGRMedioInformacionSolicitud AS mdio INNER JOIN PSGRCatMedioEnteraste AS cmed ON cmed.persistenceid = mdio.cat_medio_enteraste_pid WHERE mdio.caseid = ?;";
	public static final String GET_DATOS_EXP_LABORAL_BY_CASEID = "SELECT ctsn.descripcion aS trabajas_actualmente FROM PSGRSolAdmiExpLaboral AS xplb INNER JOIN PSGRCatSiNo AS ctsn ON ctsn.persistenceid = xplb.trabajas_actualmente_pid WHERE xplb.caseid = ?;";
	public static final String GET_TRABAJOS_BY_CASEID_AND_ISACTUAL = "SELECT desc_responsabilidad, ext_telefono_empresa, TO_CHAR(fecha_inicio::TIMESTAMP, 'DD/MM/YYYY') AS fecha_inicio, nombre_empresa, telefono_empresa, ctem.descripcion AS tipo_empresa, cgem.descripcion AS giro_empresa,  cptr.descripcion AS puesto, rprt.descripcion AS reporta_a, ctmp.descripcion AS tipo_empleado FROM PSGRInformacionLaboral AS ilbr LEFT JOIN PSGRCatTipoEmpresa AS ctem ON ilbr.tipo_empresa_pid = ctem.persistenceid LEFT JOIN PSGRCatGiroEmpresa AS cgem ON ilbr.giro_empresa_pid = cgem.persistenceid LEFT JOIN PSGRCatPuestoTrabajo AS cptr ON ilbr.puesto_trabajo_pid = cptr.persistenceid LEFT JOIN PSGRCatPuestoTrabajo AS rprt ON ilbr.reporta_a_puesto_pid = rprt.persistenceid LEFT JOIN PSGRCatTipoEmpleado AS ctmp ON ctmp.persistenceid = ilbr.tipo_empleado_pid WHERE caseid = ? AND es_trabajo_actual = ?;";
	public static final String GET_DATOS_INFO_ACADEMICA_BY_CASEID = "SELECT TO_CHAR(fecha_inicio::TIMESTAMP, 'DD/MM/YYYY') AS fecha_inicio, TO_CHAR(fecha_termino::TIMESTAMP, 'DD/MM/YYYY') AS fecha_termino, institucion, programa, promedio, (CASE WHEN  titulo = true THEN 'Sí' ELSE 'No' END ) AS titulo, ctps.descripcion AS pais, ctgr.descripcion AS grado  FROM PSGRSolAdmiInfoAcademica AS inac INNER JOIN PSGRCatPais AS ctps ON ctps.persistenceid = inac.pais_pid  INNER JOIN PSGRCatGradoEstudio AS ctgr ON ctgr.persistenceid = inac.grado_estudio_pid  WHERE caseid = ?;";
	public static final String GET_DATOS_INFO_IDIOMAS_BY_CASEID = "SELECT idioma, habla, traduce, escribe FROM PSGRIdiomas  WHERE caseid = ?;";
	public static final String GET_DATOS_RV_BY_CASEID = "SELECT TO_CHAR(fecha_envio_solicitud::TIMESTAMP, 'DD/MM/YYYY') AS fecha_envio_solicitud, id_banner_validacion  FROM PSGRRegistro rgst  WHERE caseid = ?;";
	public static final String GET_CONFIGURACIONES_POSGRADOS = "SELECT clave, valor FROM PSGRConfiguraciones WHERE clave IN ('formulario_solicitud_consentimiento', 'formulario_solicitud_manifiesto') AND id_campus = (SELECT campus_pid FROM PSGRRegistro WHERE caseid = ? LIMIT 1)";
}