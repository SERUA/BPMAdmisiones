package com.anahuac.rest.api.DB

class Statements {
	public static final String CONFIGURACIONESSSA="SELECT * FROM CATCONFIGURACION WHERE CLAVE = 'SASAzure'";
	
	public static final String INFO_REPORTE = "SELECT sda.resultadoPAA,sda.caseid,ds.idbanner,TO_CHAR(tp.fechaFinalizacion::DATE, 'dd-Mon-yyyy') AS fechaFinalizacion,sda.urlfoto,CONCAT(sda.apellidopaterno,' ',sda.apellidomaterno,CASE WHEN (sda.apellidomaterno != '' ) THEN ' ' END,sda.segundonombre,CASE WHEN ( sda.segundonombre != '' ) THEN ' ' END,sda.primernombre) AS nombre,  TO_CHAR(sda.fechanacimiento::DATE, 'dd-Mon-yyyy') AS fechanacimiento ,(CASE WHEN cb.descripcion = 'Otro' THEN sda.bachillerato ELSE cb.descripcion END) AS preparatoria, (CASE WHEN cb.descripcion = 'Otro' THEN sda.ciudadBachillerato ELSE cb.ciudad END) AS ciudad, cp.descripcion as pais, cge.nombre as carrera, IPAA.INVP,IPAA.PARA,IPAA.PAAN,IPAA.PAAV, sda.promediogeneral as promedio, cta.descripcion AS tipoAdmision, catP.clave as periodo,tp.quienIntegro, tp.quienRealizoEntrevista, date_part('year', age( sda.fechanacimiento::DATE)) as edad FROM SolicitudDeAdmision AS sda LEFT JOIN DetalleSolicitud AS ds ON sda.caseid = ds.caseid::INTEGER LEFT JOIN catbachilleratos AS cb ON cb.persistenceid = sda.catbachilleratos_pid LEFT JOIN catpais AS cp ON cp.persistenceid = sda.catpais_pid LEFT JOIN catGestionEscolar as CGE ON CGE.persistenceid = sda.catGestionEscolar_pid LEFT JOIN importacionPAA AS IPAA ON IPAA.idbanner = DS.idbanner and sda.caseid::varchar = IPAA.caseid LEFT JOIN catTipoAdmision AS cta ON cta.persistenceid = ds.cattipoadmision_pid LEFT JOIN catPeriodo AS catP ON catP.persistenceid = sda.catperiodo_pid LEFT JOIN testPsicometrico AS tp ON tp.caseid::INTEGER = sda.caseid WHERE sda.correoelectronico = ? AND countrechazo = ?"
	
	public static final String SELECT_SITUACION_SALUD = "SELECT auto.problemassaludatencioncontinua AS situacion_discapacidad, auto.tipoDiscapacidad AS tipo_discapacidad, auto.hasRecibidoAlgunaTerapia AS tipo_terapia, cd.descripcion AS cat_situacion_discapacidad_descripcion, cps.descripcion AS cat_persona_saludable_descripcion, ct.descripcion AS cat_terapia_descripcion, psa.descripcion as situacionTipo, auto.problemasSaludAtencionContinua FROM autodescripcionV2 AS auto INNER JOIN CatDiscapacidad AS cd ON auto.catvivesestadodiscapacidad_pid = cd.persistenceid INNER JOIN CatPersonaSaludable cps ON auto.catpersonasaludable_pid = cps.persistenceid INNER JOIN CatTerapia AS ct ON auto.catrecibidoterapia_pid = ct.persistenceid INNER JOIN CatProblemasSaludAtencion as psa ON psa.persistenceid = auto.catProblemasSaludAtencion_pid  WHERE auto.caseid = ?";
	
	public static final String SELECT_RECOMENDACIONES_CONCLUSIONES = "SELECT tp.resumenSalud AS salud, tp.conclusioneinvp AS conclusiones_recomendaciones, tp.interpretacioninvp AS interpretacion, cc.descripcion AS cursos_recomendados FROM testpsicometrico AS tp LEFT JOIN testpsicometri_custosrecomend AS tc ON tp.persistenceid = tc.testpsicometrico_pid LEFT JOIN catcursos AS cc ON tc.catcursos_pid = cc.persistenceid WHERE tp.caseid = ? and tp.countRechazo = ?"
	
	public static final String DATOS_BY_IDBANNER = " SELECT CASE WHEN sda.countrechazos is NULL THEN 0 ELSE sda.countrechazos END AS intentos ,sda.correoelectronico,DS.idbanner,SDA.urlFoto, SDA.urlConstancia, SDA.urlActaNacimiento  FROM DETALLESOLICITUD AS DS LEFT JOIN SOLICITUDDEADMISION AS SDA ON SDA.CASEID = DS.CASEID::INTEGER WHERE IDBANNER = ? limit 1"
	
	public static final String GET_DATOS_AVAL = "SELECT sdae.caseid AS caseidapoyo, sola.primernombre,  sola.segundonombre, sola.apellidopaterno, sola.apellidomaterno, sola.codigopostal AS cpsol, sola.colonia AS coloniasol, sola.calle AS callesol, sola.numexterior AS numerosol, sola.ciudad AS ciudadsol, sola.telefono AS telefonosol, sola.telefonocelular AS celularsol, sola.correoelectronico AS correosol, pais.descripcion AS paissol, esta.descripcion AS estadosol, cges.nombre AS carrera, sola.urlFoto As fotosol,  deta.idbanner, cpfi.descripcion AS porcentajefinanciamientosolicitado,  prea.porcentajeCredito AS porcentajefinanciamientopreautorizado,  pers.nombres AS avalnombres, pers.apellidopaterno AS avalapellido_p, pers.apellidomaterno AS avalapellido_m, pers.curp AS avalcurp,  pers.telefono AS avaltelefono, pers.email AS avalemail, pers.ingresomensual, pers.provenientede, pers.otroingreso, pers.ingresomensualtotal, pers.egresomensualtotal, pers.saldomensual, pers.pais AS avaldomiciliopais, pers.cp AS avaldomiciliocp, pers.estado AS avaldomicilioestado, pers.ciudad AS avaldomiciliociudad, pers.rfc, pers.colonia AS avaldomiciliocolonia , pers.calleynumero AS avaldomiciliocalleynumero, pers.empresatrabaja AS avaltrabajoempresa, pers.empresapuesto AS avaltrabajopuesto, pers.empresatelefono AS avaltrabajotelefono, pers.empresaextensiontelefono AS avaltrabajotelefonoext, pers.empresafechaingreso AS avaltrabajofechaingreso, pers.empresacorreoelectronico AS avaltrabajoemail, pers.empresapais AS avaltrabajopais, pers.empresacp AS avaltrabajocp, pers.empresaestado AS avaltrabajoestado, pers.empresaciudad AS avaltrabajociudad, pers.empresacolonia AS avaltrabajocolonia, pers.empresacalleynumero AS avaltrabajocalleynumero, inmu.pais AS inmueblepais, inmu.cp AS inmueblecp, inmu.estado AS inmuebleestado, inmu.ciudad AS inmuebleciudad, inmu.colonia AS inmueblecolonia, inmu.noexterior AS inmueblenointerior, inmu.calle AS inmueblecalle, inmu.noexterior AS inmueblenoexterior, nota.notario, nota.numeronotaria, nota.numeroescritura, nota.fecha AS fechanotario, nota.volumen AS volumennotario, nota.libro AS libronotario, nota.lugardeescrituracion AS lugardeescrituracionnotario, prop.folio AS foliopropiedad, prop.libro AS libropropiedad, prop.tomo AS tomopropiedad, prop.fecharegistro AS fechapropiedad FROM AvalInfoPersonal AS pers INNER JOIN AvalInfoInmueble AS inmu ON inmu.caseid = pers.caseid INNER JOIN AvalInfoNotarial AS nota ON nota.caseid = pers.caseid  INNER JOIN AvalInfoPropiedad AS prop ON prop.caseid = pers.caseid INNER JOIN SolicitudApoyoEducativo AS sdae ON sdae.caseid = pers.caseid INNER JOIN SolicitudDeAdmision AS sola ON sola.caseid::BIGINT = sdae.caseidadmisiones  INNER JOIN DetalleSolicitud AS deta ON sola.caseid::BIGINT = deta.caseid::BIGINT  INNER JOIN CatPorcentajeFinanciamiento  AS cpfi ON cpfi.persistenceid = sdae.CatPorcentajeFinanciamiento_id  INNER JOIN PreAutorizacion AS prea ON prea.caseid = sdae.caseid  INNER JOIN CATPAIS AS pais ON pais.persistenceid = sola.catpais_pid INNER JOIN CATESTADOS AS esta ON esta.persistenceid = sola.catestado_pid INNER JOIN CATGESTIONESCOLAR AS cges ON cges.persistenceid = sola.catgestionescolar_pid WHERE sola.correoelectronico = ?;";
}
