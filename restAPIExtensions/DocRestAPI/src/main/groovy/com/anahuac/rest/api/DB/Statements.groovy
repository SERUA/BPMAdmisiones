package com.anahuac.rest.api.DB

class Statements {
	public static final String CONFIGURACIONESSSA="SELECT * FROM CATCONFIGURACION WHERE CLAVE = 'SASAzure'";
	
	public static final String INFO_REPORTE = "SELECT sda.resultadoPAA,sda.caseid,ds.idbanner,TO_CHAR(tp.fechaFinalizacion::DATE, 'dd-Mon-yyyy') AS fechaFinalizacion,sda.urlfoto,CONCAT(sda.apellidopaterno,' ',sda.apellidomaterno,CASE WHEN (sda.apellidomaterno != '' ) THEN ' ' END,sda.segundonombre,CASE WHEN ( sda.segundonombre != '' ) THEN ' ' END,sda.primernombre) AS nombre,  TO_CHAR(sda.fechanacimiento::DATE, 'dd-Mon-yyyy') AS fechanacimiento ,(CASE WHEN cb.descripcion = 'Otro' THEN sda.bachillerato ELSE cb.descripcion END) AS preparatoria, (CASE WHEN cb.descripcion = 'Otro' THEN sda.ciudadBachillerato ELSE cb.ciudad END) AS ciudad, cp.descripcion as pais, cge.nombre as carrera, IPAA.INVP,IPAA.PARA,IPAA.PAAN,IPAA.PAAV, sda.promediogeneral as promedio, cta.descripcion AS tipoAdmision, catP.clave as periodo,tp.quienIntegro, tp.quienRealizoEntrevista, date_part('year', age( sda.fechanacimiento::DATE)) as edad FROM SolicitudDeAdmision AS sda LEFT JOIN DetalleSolicitud AS ds ON sda.caseid = ds.caseid::INTEGER LEFT JOIN catbachilleratos AS cb ON cb.persistenceid = sda.catbachilleratos_pid LEFT JOIN catpais AS cp ON cp.persistenceid = sda.catpais_pid LEFT JOIN catGestionEscolar as CGE ON CGE.persistenceid = sda.catGestionEscolar_pid LEFT JOIN importacionPAA AS IPAA ON IPAA.idbanner = DS.idbanner and sda.caseid::varchar = IPAA.caseid LEFT JOIN catTipoAdmision AS cta ON cta.persistenceid = ds.cattipoadmision_pid LEFT JOIN catPeriodo AS catP ON catP.persistenceid = sda.catperiodo_pid LEFT JOIN testPsicometrico AS tp ON tp.caseid::INTEGER = sda.caseid WHERE sda.correoelectronico = ? AND countrechazo = ?"
	
	public static final String SELECT_SITUACION_SALUD = "SELECT auto.problemassaludatencioncontinua AS situacion_discapacidad, auto.tipoDiscapacidad AS tipo_discapacidad, auto.hasRecibidoAlgunaTerapia AS tipo_terapia, cd.descripcion AS cat_situacion_discapacidad_descripcion, cps.descripcion AS cat_persona_saludable_descripcion, ct.descripcion AS cat_terapia_descripcion, psa.descripcion as situacionTipo, auto.problemasSaludAtencionContinua FROM autodescripcionV2 AS auto INNER JOIN CatDiscapacidad AS cd ON auto.catvivesestadodiscapacidad_pid = cd.persistenceid INNER JOIN CatPersonaSaludable cps ON auto.catpersonasaludable_pid = cps.persistenceid INNER JOIN CatTerapia AS ct ON auto.catrecibidoterapia_pid = ct.persistenceid INNER JOIN CatProblemasSaludAtencion as psa ON psa.persistenceid = auto.catProblemasSaludAtencion_pid  WHERE auto.caseid = ?";
	
	public static final String SELECT_RECOMENDACIONES_CONCLUSIONES = "SELECT tp.resumenSalud AS salud, tp.conclusioneinvp AS conclusiones_recomendaciones, tp.interpretacioninvp AS interpretacion, cc.descripcion AS cursos_recomendados FROM testpsicometrico AS tp LEFT JOIN testpsicometri_custosrecomend AS tc ON tp.persistenceid = tc.testpsicometrico_pid LEFT JOIN catcursos AS cc ON tc.catcursos_pid = cc.persistenceid WHERE tp.caseid = ? and tp.countRechazo = ?"
	
	public static final String DATOS_BY_IDBANNER = " SELECT CASE WHEN sda.countrechazos is NULL THEN 0 ELSE sda.countrechazos END AS intentos ,sda.correoelectronico,DS.idbanner,SDA.urlFoto, SDA.urlConstancia, SDA.urlActaNacimiento  FROM DETALLESOLICITUD AS DS LEFT JOIN SOLICITUDDEADMISION AS SDA ON SDA.CASEID = DS.CASEID::INTEGER WHERE IDBANNER = ? limit 1"
	
	public static final String GET_DATOS_AVAL = "SELECT sdae.caseid AS caseidapoyo, sola.primernombre, sola.segundonombre, sola.apellidopaterno, sola.apellidomaterno, sdae.codigopostal AS cpsol, sdae.colonia AS coloniasol, sdae.calle AS callesol, sdae.numexterior AS numerosol, sdae.delegacionciudad AS ciudadsol, sola.telefono AS telefonosol, sola.telefonocelular AS celularsol, sola.correoelectronico AS correosol, sdae.pais AS paissol, sdae.estado AS estadosol, cges.nombre AS carrera, sola.urlFoto AS fotosol, deta.idbanner, cpfi.descripcion AS porcentajefinanciamientosolicitado, prea.porcentajeCredito AS porcentajefinanciamientopreautorizado, pers.nombres AS avalnombres, pers.apellidopaterno AS avalapellido_p, pers.apellidomaterno AS avalapellido_m, pers.curp AS avalcurp, pers.telefono AS avaltelefono, pers.email AS avalemail, pers.ingresomensual, CPRI.descripcion AS provenientede, pers.otroingreso, pers.ingresomensualtotal, pers.egresomensualtotal, pers.saldomensual, pers.pais AS avaldomiciliopais, pers.cp AS avaldomiciliocp, pers.estado AS avaldomicilioestado, pers.ciudad AS avaldomiciliociudad, pers.rfc, pers.colonia AS avaldomiciliocolonia, pers.calleynumero AS avaldomiciliocalleynumero, pers.empresatrabaja AS avaltrabajoempresa, pers.empresapuesto AS avaltrabajopuesto, pers.empresatelefono AS avaltrabajotelefono, pers.empresaextensiontelefono AS avaltrabajotelefonoext, pers.empresafechaingreso AS avaltrabajofechaingreso, pers.empresacorreoelectronico AS avaltrabajoemail, pers.empresapais AS avaltrabajopais, pers.empresacp AS avaltrabajocp, pers.empresaestado AS avaltrabajoestado, pers.empresaciudad AS avaltrabajociudad, pers.empresacolonia AS avaltrabajocolonia, pers.empresacalleynumero AS avaltrabajocalleynumero, inmu.pais AS inmueblepais, inmu.cp AS inmueblecp, inmu.estado AS inmuebleestado, inmu.ciudad AS inmuebleciudad, inmu.colonia AS inmueblecolonia, inmu.noexterior AS inmueblenointerior, inmu.calle AS inmueblecalle, inmu.noexterior AS inmueblenoexterior, nota.notario, nota.numeronotaria, nota.numeroescritura, nota.fecha AS fechanotario, nota.volumen AS volumennotario, nota.libro AS libronotario, nota.lugardeescrituracion AS lugardeescrituracionnotario, prop.folio AS foliopropiedad, prop.libro AS libropropiedad, prop.tomo AS tomopropiedad, prop.fecharegistro AS fechapropiedad, cper.descripcion AS periodo, FINA.*, sdae.* FROM AvalInfoPersonal AS pers LEFT JOIN AvalInfoInmueble AS inmu ON inmu.caseid = pers.caseid LEFT JOIN AvalInfoNotarial AS nota ON nota.caseid = pers.caseid LEFT JOIN AvalInfoPropiedad AS prop ON prop.caseid = pers.caseid INNER JOIN SolicitudApoyoEducativo AS sdae ON sdae.caseid = pers.caseid INNER JOIN SolicitudDeAdmision AS sola ON sola.caseid::BIGINT = sdae.caseidadmisiones INNER JOIN DetalleSolicitud AS deta ON sola.caseid::BIGINT = deta.caseid::BIGINT LEFT JOIN CatPorcentajeFinanciamiento AS cpfi ON cpfi.persistenceid = sdae.CatPorcentajeFinanciamiento_id INNER JOIN PreAutorizacion AS prea ON prea.caseid = sdae.caseid LEFT JOIN CATPAIS AS pais ON pais.persistenceid = sola.catpais_pid LEFT JOIN CATESTADOS AS esta ON esta.persistenceid = sola.catestado_pid LEFT JOIN CATGESTIONESCOLAR AS cges ON cges.persistenceid = sola.catgestionescolar_pid LEFT JOIN CATPERIODO AS cper ON cper.persistenceid = SOLA.catperiodo_pid LEFT JOIN CatProvienenIngresos AS CPRI ON CPRI.persistenceid = pers.provenientede::bigint LEFT JOIN SolicitudFinanciamiento AS FINA ON FINA.caseidsdae = sdae.caseid WHERE sola.correoelectronico = ?;";
	
	public static final String GET_SOLICITUD_ADMISION_INFO = "SELECT SOLA.caseid AS caseid, SOLA.primernombre, SOLA.segundonombre, SOLA.apellidopaterno, SOLA.apellidomaterno, SOLA.correoelectronico, DETA.idbanner, CGE.nombre AS carrera, CPER.descripcion AS periodo, SOLA.fechanacimiento, CBAC.descripcion AS preparatoria, CBAC.pais AS paisprepa, CBAC.estado AS estadoprepa,CBAC.ciudad AS ciudadprepa, CSEX.descripcion AS sexo , SOLA.promediogeneral, SOLA.calle, SOLA.ciudad, CPAI.descripcion AS pais, CEST.descripcion AS estado, SOLA.telefono,  SOLA.telefonocelular, SOLA.tienepaa, SOLA.resultadopaa, CECI.descripcion AS estadocivil, SOLA.urlfoto, SOLA.colonia,  SOLA.codigopostal AS cp , CTAD.descripcion AS tipoingreso , CATR.descripcion AS trabajas  FROM SOLICITUDDEADMISION AS SOLA INNER JOIN DETALLESOLICITUD AS DETA ON SOLA.CASEID = DETA.CASEID::bigint INNER JOIN CATGESTIONESCOLAR AS CGE ON CGE.persistenceid = SOLA.catgestionescolar_pid INNER JOIN CATPERIODO AS CPER ON CPER.persistenceid = SOLA.catperiodo_pid INNER JOIN CATSEXO AS CSEX ON CSEX.persistenceid = SOLA.catsexo_pid LEFT JOIN CATBACHILLERATOS AS CBAC ON CBAC.persistenceid = SOLA.catbachilleratos_pid LEFT JOIN CATPAIS AS CPAI ON CPAI.PERSISTENCEID = SOLA.catpais_pid LEFT JOIN CATESTADOS AS CEST ON CEST.PERSISTENCEID = SOLA.catestado_pid LEFT JOIN CATESTADOCIVIL AS CECI ON CECI.PERSISTENCEID = SOLA.catestadocivil_pid LEFT JOIN CATTIPOADMISION AS CTAD ON CTAD.persistenceid = DETA.cattipoadmision_pid LEFT JOIN AUTODESCRIPCIONV2 AS AUTO ON AUTO.CASEID = SOLA.CASEID LEFT JOIN CATACTUALMENTETRABAJAS AS CATR ON CATR.persistenceid = AUTO.catactualnentetrabajas_pid WHERE SOLA.CORREOELECTRONICO = ?;"
	
	public static final String GET_PADRES_TUTOR_BY_CASEID = "SELECT PADR.*, CPAR.descripcion AS parentesco, CPTR.descripcion AS trabaja, CPVI.descripcion AS vive, CTIT.descripcion AS titulo FROM PADRESTUTOR AS PADR LEFT JOIN CATPARENTESCO AS CPAR ON PADR.catparentezco_pid = CPAR.persistenceid LEFT JOIN CATPADRETRABAJA AS CPTR ON CPTR.persistenceid = PADR.cattrabaja_pid LEFT JOIN CATVIVE AS CPVI ON CPVI.persistenceid = PADR.vive_pid  LEFT JOIN CATTITULO AS CTIT ON CTIT.persistenceid = PADR.cattitulo_pid WHERE PADR.CASEID = ?;";
	
	public static final String GET_SOLICITUD_APOYO_INFO = "SELECT SDAE.costoMensualColegiatura AS colegiatura, SDAE.telefonoCasaTutor, SDAE.telefonoOficinaTutor, SDAE.parentescoTutor,SDAE.motivoBeca,SDAE.cantMensualPagarUni, SDAE.correoElectronicoTutor, SDAE.ingresoMensualNetoTutor, SDAE.motivoBeca, SDAE.cantMensualPagarUni, SDAE.contruccionM2Casa, SDAE.terrenoM2Casa, SDAE.valorAproxCasa, SDAE.calle, SDAE.delegacionCiudad, SDAE.numExterior, SDAE.numInterior, SDAE.pais, SDAE.colonia, SDAE.estado, SDAE.codigoPostal, SDAE.ingresoPadre, SDAE.ingresoMadre, SDAE.ingresoHermano, SDAE.ingresoTio, SDAE.ingresoAbuelo, SDAE.ingresoAspirante, SDAE.ingresoOtro,  SDAE.ingresoTotal, SDAE.egresoRenta, SDAE.egresoServicios, SDAE.egresoEducacion, SDAE.egresoGastosMedicos, SDAE.egresoAlimentacion, SDAE.egresoVestido, SDAE.egresoSeguro, SDAE.egresoDiversion, SDAE.egresoAhorro, SDAE.egresoCreditos, SDAE.egresoOtros, SDAE.egresoTotal, SDAE.estatusSolicitud, CCDV.descripcion AS casadondevives, CSEX.descripcion AS sexoTutor, CECP.descripcion AS mispadresestan, CPIN.descripcion AS provieneningresos, CTAP.descripcion AS tipoapoyo, CTM.clave AS tipoMoneda, AUTO.porcentajeCreditoAutorizacion, AUTO.porcentajeBecaAutorizacion, AUTO.promedioMinimoAutorizacion, AUTO.descuentoAnticipadoAutorizacion, AUTO.motivoRechazoAutorizacionText, AUTO.cambiosSolicitudAutorizacionText, AUTO.fechaautorizacion, AUTO.usuarioautoriza, SDAE.telefonooficinamadre, SDAE.telefonooficinapadre, SDAE.telefonocasamadre, SDAE.telefonocasapadre, CTMO.clave AS tipomoneda, CTMO.descripcion AS tipomonedacompleto FROM SolicitudApoyoEducativo AS SDAE  LEFT JOIN CATCASADONDEVIVES AS CCDV ON CCDV.persistenceid = SDAE.catCasaDondeVives_id LEFT JOIN CATSEXO AS CSEX ON CSEX.persistenceid = SDAE.catSexTutor_id LEFT JOIN CatSDAEEstadoCivilPadres AS CECP ON CECP.persistenceid = SDAE.catEstadoCivilPadres_id  LEFT JOIN CatProvienenIngresos AS CPIN ON CPIN.persistenceid = SDAE.catProvienenIngresos_id LEFT JOIN CatTipoApoyo AS CTAP ON CTAP.persistenceid = SDAE.catTipoApoyo_id LEFT JOIN CatTipoMoneda  AS CTM ON CTM.persistenceid = SDAE.catTipoMoneda_id LEFT JOIN AutorizacionApoyo AS AUTO ON AUTO.caseid = SDAE.caseid LEFT JOIN CatTipoMoneda AS CTMO ON CTMO.persistenceid = SDAE.cattipomoneda_id WHERE SDAE.CASEID = ?;";
	
	public static final String GET_BIENES_RAICES_BY_CASEID = "SELECT BIEN.persistenceid, BIEN.descripcion, BIEN.direccionbanco, BIEN.persistenceversion, BIEN.valor, CTIP.descripcion AS tipo FROM BienesRaicesSolicitante AS BIEN  LEFT JOIN CATTIPOINVERSIONESPOSEE AS CTIP ON CTIP.persistenceid = BIEN.cattipoinversionesposee_id  WHERE BIEN.CASEID = ?";
	
	public static final String GET_HERMANOS_BY_CASEID = "SELECT nombres, apellidos, colegiaturamensual, edad, empresa, ingresomensual, institucion, isestudia, istienebeca, istrabaja, porcentajebecaasignado FROM HERMANOSSOLICITANTE  WHERE CASEID = ?;";
	
	public static final String GET_AUTOS_BY_CASEID = "SELECT AUSO.marca, AUSO.modelo, AUSO.ano, CSDA.descripcion AS situacion, AUSO.costoaproximado FROM  AutosSolicitante AS AUSO LEFT JOIN CatSituacionAuto AS CSDA ON CSDA.persistenceid = AUSO.catsituacionauto_id WHERE CASEID = ?;";
	
	public static final String GET_IMAGENES_BY_CASEID = "SELECT ISOL.urlimagen, CISE.descripcion  FROM ImagenesSocioEcoSolicitante AS ISOL LEFT JOIN CatImagenesSocioEconomico AS CISE ON CISE.persistenceid = ISOL.imagensocioeconomico_id  WHERE ISOL.caseid = ? ORDER BY ISOL DESC LIMIT 4 OFFSET 0;";
	
	public static final String GET_PAA_BY_IDBANNER_SIN_PERSISTENCE = "SELECT idBanner,paan,la1,la2,la3,la4,pg1,pg2,pg3,pg4,pg5,pv1,pv4,paav,leo1,leo3,leo4,leo5,cit1,cit2,para,hi1,hi2,hi3,hi4,hi5,hi6,(paan::INTEGER+paav::INTEGER+para::INTEGER+ (CASE WHEN invp is null then 0  WHEN INVP = '' THEN 0 ELSE invp::INTEGER END) ) as total,fechaExamen,lexiumPaan,LexiumPaav,lexiumPara,lexiumTotal,fechaRegistro,tipoExamen,persistenceid,invp FROM IMPORTACIONPAA WHERE IDBANNER = ?"
	
	public static final String GET_REFERENCIAS_PERSONALES = "SELECT persistenceid, correopersonal, nombre, parentesco, telefono, espersonal FROM AvalReferenciasPersonales WHERE caseid = ? AND espersonal = ? ORDER BY persistenceid ASC";
	
	public static final String GET_REFERENCIAS_BANCARIAS = "SELECT banco, numerocuenta, saldopromedio, tipocuenta, esbancaria  FROM AvalReferencia WHERE caseid = ? AND esbancaria = ? ORDER BY persistenceid ASC";
}